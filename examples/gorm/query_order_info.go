// Code generated by sqlboy. DO NOT EDIT.
package gorm

import "context"

type OrderInfoDao interface {
	CreateOrderInfo(ctx context.Context, orderInfo *OrderInfo) error
	BatchCreateOrderInfo(ctx context.Context, list []*OrderInfo, batchSize int) error
	FindOrderInfo(ctx context.Context, id uint32) (*OrderInfo, error)
	UpdateOrderInfo(ctx context.Context, orderInfo *OrderInfo) error
	DeleteOrderInfo(ctx context.Context, id uint32) error
	FindByOrderId(ctx context.Context, orderId string) (*OrderInfo, error)
	UpdateByOrderId(ctx context.Context, orderInfo *OrderInfo) error
	DeleteByOrderId(ctx context.Context, orderId string) error
}

type OrderInfoImpl struct {
	dao *Dao
}

func NewOrderInfoDao(dao *Dao) OrderInfoDao {
	return &OrderInfoImpl{
		dao: dao,
	}
}

func (d *OrderInfoImpl) CreateOrderInfo(ctx context.Context, orderInfo *OrderInfo) error {
	return d.dao.DB(ctx).Create(orderInfo).Error
}

func (d *OrderInfoImpl) BatchCreateOrderInfo(ctx context.Context, list []*OrderInfo, batchSize int) error {
	return d.dao.DB(ctx).CreateInBatches(list, batchSize).Error
}

func (d *OrderInfoImpl) FindOrderInfo(ctx context.Context, id uint32) (*OrderInfo, error) {
	var orderInfo OrderInfo
	if err := d.dao.DB(ctx).Where("`id` = ?", id).First(&orderInfo).Error; err != nil {
		return nil, err
	}
	return &orderInfo, nil
}

func (d *OrderInfoImpl) UpdateOrderInfo(ctx context.Context, orderInfo *OrderInfo) error {
	return d.dao.DB(ctx).Where("`id` = ?", orderInfo.Id).Updates(orderInfo).Error
}

func (d *OrderInfoImpl) DeleteOrderInfo(ctx context.Context, id uint32) error {
	return d.dao.DB(ctx).Where("`id` = ?", id).Delete(&OrderInfo{}).Error
}

func (d *OrderInfoImpl) FindByOrderId(ctx context.Context, orderId string) (*OrderInfo, error) {
	var orderInfo OrderInfo
	if err := d.dao.DB(ctx).Where("`order_id` = ?", orderId).First(&orderInfo).Error; err != nil {
		return nil, err
	}
	return &orderInfo, nil
}

func (d *OrderInfoImpl) UpdateByOrderId(ctx context.Context, orderInfo *OrderInfo) error {
	return d.dao.DB(ctx).Where("`order_id` = ?", orderInfo.OrderId).Updates(orderInfo).Error
}

func (d *OrderInfoImpl) DeleteByOrderId(ctx context.Context, orderId string) error {
	return d.dao.DB(ctx).Where("`order_id` = ?", orderId).Delete(&OrderInfo{}).Error
}
